name: Deploy Storybook

on:
  push:
    branches: [main]
    paths:
      - 'libs/components/src/**'
      - 'apps/storybook/**'
      - '.storybook/**'
  workflow_dispatch:

env:
  BUN_VERSION: "latest"

jobs:
  deploy:
    name: Build and Deploy Storybook
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: ${{ env.BUN_VERSION }}

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Build component library
        run: bun run build:lib

      - name: Build Storybook
        run: bun run build:storybook

      - name: Optimize build
        run: |
          cd dist/storybook
          # Remove source maps to reduce size
          find . -name "*.map" -delete
          # Compress assets
          find . -type f -name "*.js" -exec gzip -k {} \;
          find . -type f -name "*.css" -exec gzip -k {} \;

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        id: deploy
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_STORYBOOK_PROJECT_ID }}
          working-directory: ./dist/storybook
          vercel-args: '--prod'

      - name: Update deployment status
        run: |
          echo "✅ Storybook deployed successfully!" >> $GITHUB_STEP_SUMMARY
          echo "🔗 Live URL: ${{ steps.deploy.outputs.preview-url }}" >> $GITHUB_STEP_SUMMARY
          echo "📊 Build artifacts: dist/storybook" >> $GITHUB_STEP_SUMMARY

      - name: Run deployment smoke tests
        run: |
          # Wait for deployment to be ready
          sleep 30
          
          # Test main Storybook page
          curl -f -s "${{ steps.deploy.outputs.preview-url }}" > /dev/null
          echo "✅ Main page accessible"
          
          # Test iframe page (stories)
          curl -f -s "${{ steps.deploy.outputs.preview-url }}/iframe.html" > /dev/null
          echo "✅ Stories iframe accessible"

      - name: Notify Discord on success
        if: success()
        uses: appleboy/discord-action@master
        with:
          webhook_id: ${{ secrets.DISCORD_WEBHOOK_ID }}
          webhook_token: ${{ secrets.DISCORD_WEBHOOK_TOKEN }}
          message: |
            📚 **Storybook Updated!**
            
            🔗 Live: ${{ steps.deploy.outputs.preview-url }}
            📝 Commit: ${{ github.event.head_commit.message }}
            👤 Author: @${{ github.actor }}

      - name: Notify Discord on failure
        if: failure()
        uses: appleboy/discord-action@master
        with:
          webhook_id: ${{ secrets.DISCORD_WEBHOOK_ID }}
          webhook_token: ${{ secrets.DISCORD_WEBHOOK_TOKEN }}
          message: |
            ❌ **Storybook Deployment Failed**
            
            🔗 Workflow: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
            📝 Commit: ${{ github.event.head_commit.message }}
            👤 Author: @${{ github.actor }}