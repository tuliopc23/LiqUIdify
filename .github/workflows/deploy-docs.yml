name: Deploy Documentation

on:
  push:
    branches: [main]
    paths:
      - 'apps/docs/**'
      - 'libs/components/src/**'
      - 'README.md'
      - 'CHANGELOG.md'
  workflow_dispatch:

env:
  BUN_VERSION: "latest"

jobs:
  deploy:
    name: Build and Deploy Documentation
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Needed for git-based last modified dates

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: ${{ env.BUN_VERSION }}

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Build component library
        run: bun run build:lib

      - name: Generate API documentation
        run: |
          # Generate TypeScript API docs from built declarations
          bunx typedoc dist/libs/components/types/index.d.ts \
            --out apps/docs/api \
            --plugin typedoc-plugin-markdown \
            --hideBreadcrumbs \
            --hideInPageTOC

      - name: Build VitePress documentation
        run: bun run docs:build

      - name: Optimize documentation build
        run: |
          cd apps/docs/.vitepress/dist
          
          # Remove source maps
          find . -name "*.map" -delete
          
          # Compress assets
          find . -type f -name "*.js" -exec gzip -k {} \;
          find . -type f -name "*.css" -exec gzip -k {} \;
          
          # Create robots.txt
          echo "User-agent: *" > robots.txt
          echo "Allow: /" >> robots.txt
          echo "Sitemap: https://docs.liquidify.dev/sitemap.xml" >> robots.txt

      - name: Generate sitemap
        run: |
          cd apps/docs/.vitepress/dist
          
          # Create sitemap.xml
          cat > sitemap.xml << 'EOF'
          <?xml version="1.0" encoding="UTF-8"?>
          <urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">
            <url>
              <loc>https://docs.liquidify.dev/</loc>
              <changefreq>weekly</changefreq>
              <priority>1.0</priority>
            </url>
            <url>
              <loc>https://docs.liquidify.dev/guide/getting-started</loc>
              <changefreq>weekly</changefreq>
              <priority>0.9</priority>
            </url>
            <url>
              <loc>https://docs.liquidify.dev/components/</loc>
              <changefreq>daily</changefreq>
              <priority>0.9</priority>
            </url>
            <url>
              <loc>https://docs.liquidify.dev/guide/theming</loc>
              <changefreq>monthly</changefreq>
              <priority>0.8</priority>
            </url>
            <url>
              <loc>https://docs.liquidify.dev/guide/accessibility</loc>
              <changefreq>monthly</changefreq>
              <priority>0.8</priority>
            </url>
            <url>
              <loc>https://docs.liquidify.dev/guide/performance</loc>
              <changefreq>monthly</changefreq>
              <priority>0.8</priority>
            </url>
          </urlset>
          EOF

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        id: deploy
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_DOCS_PROJECT_ID }}
          working-directory: ./apps/docs/.vitepress/dist
          vercel-args: '--prod'

      - name: Update deployment status
        run: |
          echo "✅ Documentation deployed successfully!" >> $GITHUB_STEP_SUMMARY
          echo "🔗 Live URL: ${{ steps.deploy.outputs.preview-url }}" >> $GITHUB_STEP_SUMMARY
          echo "📊 Build artifacts: apps/docs/.vitepress/dist" >> $GITHUB_STEP_SUMMARY

      - name: Run deployment tests
        run: |
          # Wait for deployment to be ready
          sleep 30
          
          # Test main documentation page
          curl -f -s "${{ steps.deploy.outputs.preview-url }}" > /dev/null
          echo "✅ Main page accessible"
          
          # Test components page
          curl -f -s "${{ steps.deploy.outputs.preview-url }}/components/" > /dev/null
          echo "✅ Components page accessible"
          
          # Test guide pages
          curl -f -s "${{ steps.deploy.outputs.preview-url }}/guide/getting-started" > /dev/null
          echo "✅ Getting started guide accessible"
          
          # Test API docs
          curl -f -s "${{ steps.deploy.outputs.preview-url }}/api/" > /dev/null || echo "⚠️ API docs may not be generated"

      - name: Update search index
        run: |
          # Ping search indexing services
          curl -X POST "https://www.google.com/ping?sitemap=https://docs.liquidify.dev/sitemap.xml" || true
          echo "🔍 Search index update requested"

      - name: Notify Discord on success
        if: success()
        uses: appleboy/discord-action@master
        with:
          webhook_id: ${{ secrets.DISCORD_WEBHOOK_ID }}
          webhook_token: ${{ secrets.DISCORD_WEBHOOK_TOKEN }}
          message: |
            📖 **Documentation Updated!**
            
            🔗 Live: ${{ steps.deploy.outputs.preview-url }}
            📝 Commit: ${{ github.event.head_commit.message }}
            👤 Author: @${{ github.actor }}
            
            **Pages Updated:**
            - API Reference
            - Component Documentation  
            - Guides & Tutorials

      - name: Notify Discord on failure
        if: failure()
        uses: appleboy/discord-action@master
        with:
          webhook_id: ${{ secrets.DISCORD_WEBHOOK_ID }}
          webhook_token: ${{ secrets.DISCORD_WEBHOOK_TOKEN }}
          message: |
            ❌ **Documentation Deployment Failed**
            
            🔗 Workflow: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
            📝 Commit: ${{ github.event.head_commit.message }}
            👤 Author: @${{ github.actor }}