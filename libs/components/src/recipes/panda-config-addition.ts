// Add this to your panda.config.ts in the theme.extend section

export const liquidGlassSlotRecipes = {
	// Dialog - Modal/popup component
	dialog: {
		className: "dialog",
		jsx: ["Dialog"],
		slots: [
			"backdrop",
			"positioner",
			"content",
			"title",
			"description",
			"trigger",
			"closeTrigger",
		],
		base: {
			backdrop: {
				position: "fixed",
				inset: 0,
				zIndex: 50,
				background: "rgba(0, 0, 0, 0.5)",
				backdropFilter: "blur(4px)",
			},
			positioner: {
				position: "fixed",
				inset: 0,
				zIndex: 50,
				display: "flex",
				alignItems: "center",
				justifyContent: "center",
				padding: "token(spacing.glass.lg)",
			},
			content: {
				position: "relative",
				overflow: "hidden",
				background: "token(colors.glass.bg)",
				backdropFilter: "blur(token(blurs.glass.md))",
				border: "1px solid token(colors.glass.border)",
				boxShadow: "token(shadows.glass.base)",
				borderRadius: "token(radii.md)",
				maxWidth: "500px",
				width: "100%",
				maxHeight: "90vh",
				padding: "token(spacing.glass.2xl)",
				display: "flex",
				flexDirection: "column",
				gap: "token(spacing.glass.lg)",
				_before: {
					content: '""',
					position: "absolute",
					top: 0,
					left: 0,
					right: 0,
					bottom: 0,
					borderRadius: "inherit",
					background: "token(colors.glass.gradients.before)",
					pointerEvents: "none",
					zIndex: 1,
				},
				_after: {
					content: '""',
					position: "absolute",
					top: "2px",
					left: "2px",
					right: "2px",
					bottom: "2px",
					borderRadius: "inherit",
					background: "token(colors.glass.gradients.after)",
					pointerEvents: "none",
					zIndex: 0,
				},
			},
			title: {
				position: "relative",
				zIndex: 2,
				color: "token(colors.text.glass.primary)",
				fontSize: "20px",
				fontWeight: 600,
				lineHeight: 1.2,
			},
			description: {
				position: "relative",
				zIndex: 2,
				color: "token(colors.text.glass.secondary)",
				fontSize: "16px",
				lineHeight: 1.5,
			},
			trigger: {
				position: "relative",
				overflow: "hidden",
				background: "token(colors.glass.bg)",
				backdropFilter: "blur(token(blurs.glass.md))",
				border: "1px solid token(colors.glass.border)",
				boxShadow: "token(shadows.glass.base)",
				borderRadius: "token(radii.md)",
				cursor: "pointer",
				display: "inline-flex",
				alignItems: "center",
				justifyContent: "center",
				padding: "token(spacing.glass.md) token(spacing.glass.lg)",
				color: "token(colors.text.glass.primary)",
				transition: "all token(durations.glass.flow) token(easings.glass.flow)",
				_hover: {
					transform: "translateY(-1px)",
					boxShadow: "token(shadows.glass.hover)",
				},
			},
			closeTrigger: {
				position: "absolute",
				top: "token(spacing.glass.md)",
				right: "token(spacing.glass.md)",
				width: "32px",
				height: "32px",
				borderRadius: "token(radii.sm)",
				background: "token(colors.glass.bg)",
				border: "1px solid token(colors.glass.border)",
				cursor: "pointer",
				display: "flex",
				alignItems: "center",
				justifyContent: "center",
				color: "token(colors.text.glass.primary)",
				zIndex: 3,
				_hover: {
					background: "token(colors.glass.subtle.bg)",
				},
			},
		},
	},

	// Menu - Dropdown menu component
	menu: {
		className: "menu",
		jsx: ["Menu"],
		slots: [
			"trigger",
			"positioner",
			"content",
			"item",
			"itemText",
			"separator",
		],
		base: {
			trigger: {
				position: "relative",
				overflow: "hidden",
				background: "token(colors.glass.bg)",
				backdropFilter: "blur(token(blurs.glass.md))",
				border: "1px solid token(colors.glass.border)",
				boxShadow: "token(shadows.glass.base)",
				borderRadius: "token(radii.md)",
				cursor: "pointer",
				display: "inline-flex",
				alignItems: "center",
				justifyContent: "center",
				gap: "token(spacing.glass.sm)",
				padding: "token(spacing.glass.md) token(spacing.glass.lg)",
				color: "token(colors.text.glass.primary)",
				transition: "all token(durations.glass.flow) token(easings.glass.flow)",
				_hover: {
					transform: "translateY(-1px)",
					boxShadow: "token(shadows.glass.hover)",
				},
			},
			positioner: {
				zIndex: 50,
			},
			content: {
				position: "relative",
				overflow: "hidden",
				background: "token(colors.glass.bg)",
				backdropFilter: "blur(token(blurs.glass.md))",
				border: "1px solid token(colors.glass.border)",
				boxShadow: "token(shadows.glass.base)",
				borderRadius: "token(radii.md)",
				minWidth: "200px",
				padding: "token(spacing.glass.sm)",
				zIndex: 50,
				_before: {
					content: '""',
					position: "absolute",
					top: 0,
					left: 0,
					right: 0,
					bottom: 0,
					borderRadius: "inherit",
					background: "token(colors.glass.gradients.before)",
					pointerEvents: "none",
					zIndex: 1,
				},
			},
			item: {
				position: "relative",
				zIndex: 2,
				display: "flex",
				alignItems: "center",
				gap: "token(spacing.glass.sm)",
				padding: "token(spacing.glass.md) token(spacing.glass.lg)",
				borderRadius: "token(radii.sm)",
				fontSize: "14px",
				border: "none",
				background: "transparent",
				width: "100%",
				textAlign: "left",
				cursor: "pointer",
				color: "token(colors.text.glass.primary)",
				transition:
					"all token(durations.glass.quick) token(easings.glass.flow)",
				_hover: {
					background: "token(colors.glass.subtle.bg)",
				},
				"&[data-highlighted]": {
					background: "token(colors.glass.subtle.bg)",
				},
			},
			itemText: {
				position: "relative",
				zIndex: 2,
				color: "token(colors.text.glass.primary)",
			},
			separator: {
				height: "1px",
				background: "token(colors.glass.border)",
				margin: "token(spacing.glass.sm) 0",
			},
		},
	},

	// Select - Dropdown select component
	select: {
		className: "select",
		jsx: ["Select"],
		slots: [
			"trigger",
			"content",
			"item",
			"itemText",
			"positioner",
			"indicator",
			"clearTrigger",
		],
		base: {
			trigger: {
				position: "relative",
				overflow: "hidden",
				background: "token(colors.glass.bg)",
				backdropFilter: "blur(token(blurs.glass.md))",
				border: "1px solid token(colors.glass.border)",
				boxShadow: "token(shadows.glass.base)",
				borderRadius: "token(radii.md)",
				cursor: "pointer",
				display: "flex",
				alignItems: "center",
				justifyContent: "space-between",
				gap: "token(spacing.glass.sm)",
				padding: "token(spacing.glass.md) token(spacing.glass.lg)",
				minHeight: "44px",
				width: "100%",
				textAlign: "left",
				color: "token(colors.text.glass.primary)",
				transition: "all token(durations.glass.flow) token(easings.glass.flow)",
				_before: {
					content: '""',
					position: "absolute",
					top: 0,
					left: 0,
					right: 0,
					bottom: 0,
					borderRadius: "inherit",
					background: "token(colors.glass.gradients.before)",
					pointerEvents: "none",
					zIndex: 1,
				},
				_hover: {
					transform: "translateY(-1px)",
					boxShadow: "token(shadows.glass.hover)",
				},
			},
			positioner: {
				zIndex: 50,
			},
			content: {
				position: "relative",
				overflow: "hidden",
				background: "token(colors.glass.bg)",
				backdropFilter: "blur(token(blurs.glass.md))",
				border: "1px solid token(colors.glass.border)",
				boxShadow: "token(shadows.glass.base)",
				borderRadius: "token(radii.md)",
				minWidth: "var(--reference-width)",
				maxHeight: "300px",
				overflowY: "auto",
				padding: "token(spacing.glass.sm)",
				zIndex: 50,
				_before: {
					content: '""',
					position: "absolute",
					top: 0,
					left: 0,
					right: 0,
					bottom: 0,
					borderRadius: "inherit",
					background: "token(colors.glass.gradients.before)",
					pointerEvents: "none",
					zIndex: 1,
				},
			},
			item: {
				position: "relative",
				zIndex: 2,
				display: "flex",
				alignItems: "center",
				gap: "token(spacing.glass.sm)",
				padding: "token(spacing.glass.md) token(spacing.glass.lg)",
				borderRadius: "token(radii.sm)",
				fontSize: "14px",
				border: "none",
				background: "transparent",
				width: "100%",
				textAlign: "left",
				cursor: "pointer",
				color: "token(colors.text.glass.primary)",
				transition:
					"all token(durations.glass.quick) token(easings.glass.flow)",
				"&[data-highlighted]": {
					background: "token(colors.glass.subtle.bg)",
				},
				"&[data-state=checked]": {
					background: "token(colors.glass.medium.bg)",
				},
			},
			itemText: {
				position: "relative",
				zIndex: 2,
				color: "token(colors.text.glass.primary)",
			},
			indicator: {
				position: "relative",
				zIndex: 2,
				display: "flex",
				alignItems: "center",
				justifyContent: "center",
				color: "token(colors.text.glass.primary)",
			},
			clearTrigger: {
				position: "relative",
				zIndex: 2,
				display: "flex",
				alignItems: "center",
				justifyContent: "center",
				width: "24px",
				height: "24px",
				borderRadius: "token(radii.sm)",
				background: "transparent",
				border: "1px solid token(colors.glass.border)",
				cursor: "pointer",
				color: "token(colors.text.glass.primary)",
				_hover: {
					background: "token(colors.glass.subtle.bg)",
				},
			},
		},
	},

	// Tabs - Tab navigation component
	tabs: {
		className: "tabs",
		jsx: ["Tabs"],
		slots: ["root", "list", "trigger", "content", "indicator"],
		base: {
			root: {
				display: "flex",
				flexDirection: "column",
				width: "100%",
			},
			list: {
				position: "relative",
				overflow: "hidden",
				background: "token(colors.glass.bg)",
				backdropFilter: "blur(token(blurs.glass.md))",
				border: "1px solid token(colors.glass.border)",
				boxShadow: "token(shadows.glass.base)",
				borderRadius: "token(radii.md)",
				display: "flex",
				alignItems: "center",
				padding: "token(spacing.glass.xs)",
				gap: "token(spacing.glass.xs)",
				_before: {
					content: '""',
					position: "absolute",
					top: 0,
					left: 0,
					right: 0,
					bottom: 0,
					borderRadius: "inherit",
					background: "token(colors.glass.gradients.before)",
					pointerEvents: "none",
					zIndex: 1,
				},
			},
			trigger: {
				position: "relative",
				zIndex: 2,
				cursor: "pointer",
				display: "flex",
				alignItems: "center",
				justifyContent: "center",
				padding: "token(spacing.glass.md) token(spacing.glass.lg)",
				border: "none",
				background: "transparent",
				borderRadius: "token(radii.sm)",
				fontSize: "14px",
				fontWeight: 500,
				color: "token(colors.text.glass.primary)",
				transition:
					"all token(durations.glass.quick) token(easings.glass.flow)",
				_hover: {
					background: "token(colors.glass.subtle.bg)",
				},
				"&[data-state=active]": {
					background: "token(colors.glass.medium.bg)",
				},
			},
			content: {
				position: "relative",
				zIndex: 2,
				padding: "token(spacing.glass.lg) 0",
				outline: "none",
				color: "token(colors.text.glass.primary)",
			},
			indicator: {
				position: "absolute",
				background: "token(colors.glass.medium.bg)",
				borderRadius: "token(radii.sm)",
				transition:
					"all token(durations.glass.quick) token(easings.glass.flow)",
			},
		},
	},

	// Tooltip - Hover tooltip component
	tooltip: {
		className: "tooltip",
		jsx: ["Tooltip"],
		slots: ["trigger", "positioner", "content"],
		base: {
			trigger: {
				display: "inline-flex",
			},
			positioner: {
				zIndex: 50,
			},
			content: {
				position: "relative",
				overflow: "hidden",
				background: "token(colors.glass.bg)",
				backdropFilter: "blur(token(blurs.glass.md))",
				border: "1px solid token(colors.glass.border)",
				boxShadow: "token(shadows.glass.base)",
				borderRadius: "token(radii.sm)",
				padding: "token(spacing.glass.sm) token(spacing.glass.md)",
				fontSize: "14px",
				maxWidth: "300px",
				zIndex: 50,
				color: "token(colors.text.glass.primary)",
				_before: {
					content: '""',
					position: "absolute",
					top: 0,
					left: 0,
					right: 0,
					bottom: 0,
					borderRadius: "inherit",
					background: "token(colors.glass.gradients.before)",
					pointerEvents: "none",
					zIndex: 1,
				},
			},
		},
	},

	// Popover - Click popup component
	popover: {
		className: "popover",
		jsx: ["Popover"],
		slots: [
			"trigger",
			"positioner",
			"content",
			"title",
			"description",
			"closeTrigger",
		],
		base: {
			trigger: {
				position: "relative",
				overflow: "hidden",
				background: "token(colors.glass.bg)",
				backdropFilter: "blur(token(blurs.glass.md))",
				border: "1px solid token(colors.glass.border)",
				boxShadow: "token(shadows.glass.base)",
				borderRadius: "token(radii.md)",
				cursor: "pointer",
				display: "inline-flex",
				alignItems: "center",
				justifyContent: "center",
				padding: "token(spacing.glass.md) token(spacing.glass.lg)",
				color: "token(colors.text.glass.primary)",
				transition: "all token(durations.glass.flow) token(easings.glass.flow)",
				_hover: {
					transform: "translateY(-1px)",
					boxShadow: "token(shadows.glass.hover)",
				},
			},
			positioner: {
				zIndex: 50,
			},
			content: {
				position: "relative",
				overflow: "hidden",
				background: "token(colors.glass.bg)",
				backdropFilter: "blur(token(blurs.glass.md))",
				border: "1px solid token(colors.glass.border)",
				boxShadow: "token(shadows.glass.base)",
				borderRadius: "token(radii.md)",
				minWidth: "300px",
				padding: "token(spacing.glass.lg)",
				zIndex: 50,
				display: "flex",
				flexDirection: "column",
				gap: "token(spacing.glass.md)",
				_before: {
					content: '""',
					position: "absolute",
					top: 0,
					left: 0,
					right: 0,
					bottom: 0,
					borderRadius: "inherit",
					background: "token(colors.glass.gradients.before)",
					pointerEvents: "none",
					zIndex: 1,
				},
			},
			title: {
				position: "relative",
				zIndex: 2,
				fontSize: "16px",
				fontWeight: 600,
				lineHeight: 1.2,
				color: "token(colors.text.glass.primary)",
			},
			description: {
				position: "relative",
				zIndex: 2,
				fontSize: "14px",
				color: "token(colors.text.glass.secondary)",
				lineHeight: 1.5,
			},
			closeTrigger: {
				position: "absolute",
				top: "token(spacing.glass.sm)",
				right: "token(spacing.glass.sm)",
				width: "24px",
				height: "24px",
				borderRadius: "token(radii.sm)",
				background: "token(colors.glass.bg)",
				border: "1px solid token(colors.glass.border)",
				cursor: "pointer",
				display: "flex",
				alignItems: "center",
				justifyContent: "center",
				color: "token(colors.text.glass.primary)",
				zIndex: 3,
				_hover: {
					background: "token(colors.glass.subtle.bg)",
				},
			},
		},
	},

	// Toast - Notification component
	toast: {
		className: "toast",
		jsx: ["Toast"],
		slots: ["root", "title", "description", "closeTrigger", "actionTrigger"],
		base: {
			root: {
				position: "relative",
				overflow: "hidden",
				background: "token(colors.glass.bg)",
				backdropFilter: "blur(token(blurs.glass.md))",
				border: "1px solid token(colors.glass.border)",
				boxShadow: "token(shadows.glass.base)",
				borderRadius: "token(radii.md)",
				display: "flex",
				alignItems: "flex-start",
				gap: "token(spacing.glass.md)",
				padding: "token(spacing.glass.lg)",
				minWidth: "300px",
				maxWidth: "500px",
				_before: {
					content: '""',
					position: "absolute",
					top: 0,
					left: 0,
					right: 0,
					bottom: 0,
					borderRadius: "inherit",
					background: "token(colors.glass.gradients.before)",
					pointerEvents: "none",
					zIndex: 1,
				},
			},
			title: {
				position: "relative",
				zIndex: 2,
				fontSize: "16px",
				fontWeight: 600,
				lineHeight: 1.2,
				color: "token(colors.text.glass.primary)",
			},
			description: {
				position: "relative",
				zIndex: 2,
				fontSize: "14px",
				color: "token(colors.text.glass.secondary)",
				lineHeight: 1.5,
			},
			closeTrigger: {
				position: "relative",
				zIndex: 2,
				width: "24px",
				height: "24px",
				borderRadius: "token(radii.sm)",
				background: "transparent",
				border: "1px solid token(colors.glass.border)",
				cursor: "pointer",
				display: "flex",
				alignItems: "center",
				justifyContent: "center",
				marginLeft: "auto",
				color: "token(colors.text.glass.primary)",
				_hover: {
					background: "token(colors.glass.subtle.bg)",
				},
			},
			actionTrigger: {
				position: "relative",
				zIndex: 2,
				padding: "token(spacing.glass.sm) token(spacing.glass.md)",
				borderRadius: "token(radii.sm)",
				background: "token(colors.glass.bg)",
				border: "1px solid token(colors.glass.border)",
				fontSize: "14px",
				fontWeight: 500,
				cursor: "pointer",
				color: "token(colors.text.glass.primary)",
				_hover: {
					background: "token(colors.glass.subtle.bg)",
				},
			},
		},
		variants: {
			status: {
				info: {
					root: {
						borderLeftColor: "token(colors.accent.primary)",
						borderLeftWidth: "4px",
					},
				},
				success: {
					root: {
						borderLeftColor: "token(colors.accent.success)",
						borderLeftWidth: "4px",
					},
				},
				warning: {
					root: {
						borderLeftColor: "token(colors.accent.warning)",
						borderLeftWidth: "4px",
					},
				},
				error: {
					root: {
						borderLeftColor: "token(colors.accent.danger)",
						borderLeftWidth: "4px",
					},
				},
			},
		},
		defaultVariants: { status: "info" },
	},
};

// Add this to your existing recipes (theme.extend.recipes)
export const liquidGlassRecipes = {
	// Avatar - Profile picture component
	avatar: {
		className: "avatar",
		jsx: ["Avatar"],
		base: {
			position: "relative",
			overflow: "hidden",
			background: "token(colors.glass.bg)",
			backdropFilter: "blur(token(blurs.glass.md))",
			border: "1px solid token(colors.glass.border)",
			boxShadow: "token(shadows.glass.base)",
			borderRadius: "token(radii.full)",
			display: "inline-flex",
			alignItems: "center",
			justifyContent: "center",
			_before: {
				content: '""',
				position: "absolute",
				top: 0,
				left: 0,
				right: 0,
				bottom: 0,
				borderRadius: "inherit",
				background: "token(colors.glass.gradients.before)",
				pointerEvents: "none",
				zIndex: 1,
			},
		},
		variants: {
			size: {
				sm: { width: "32px", height: "32px", fontSize: "14px" },
				md: { width: "40px", height: "40px", fontSize: "16px" },
				lg: { width: "48px", height: "48px", fontSize: "18px" },
				xl: { width: "56px", height: "56px", fontSize: "20px" },
			},
		},
		defaultVariants: { size: "md" },
	},

	// Checkbox - Checkbox input component
	checkbox: {
		className: "checkbox",
		jsx: ["Checkbox"],
		base: {
			position: "relative",
			overflow: "hidden",
			background: "token(colors.glass.bg)",
			backdropFilter: "blur(token(blurs.glass.md))",
			border: "1px solid token(colors.glass.border)",
			boxShadow: "token(shadows.glass.base)",
			borderRadius: "token(radii.sm)",
			cursor: "pointer",
			display: "inline-flex",
			alignItems: "center",
			justifyContent: "center",
			_before: {
				content: '""',
				position: "absolute",
				top: 0,
				left: 0,
				right: 0,
				bottom: 0,
				borderRadius: "inherit",
				background: "token(colors.glass.gradients.before)",
				pointerEvents: "none",
				zIndex: 1,
			},
		},
		variants: {
			size: {
				sm: { width: "16px", height: "16px" },
				md: { width: "20px", height: "20px" },
				lg: { width: "24px", height: "24px" },
			},
		},
		defaultVariants: { size: "md" },
	},

	// Switch - Toggle switch component
	switch: {
		className: "switch",
		jsx: ["Switch"],
		base: {
			position: "relative",
			overflow: "hidden",
			background: "token(colors.glass.bg)",
			backdropFilter: "blur(token(blurs.glass.md))",
			border: "1px solid token(colors.glass.border)",
			boxShadow: "token(shadows.glass.base)",
			borderRadius: "token(radii.full)",
			cursor: "pointer",
			display: "inline-flex",
			alignItems: "center",
			padding: "2px",
			_before: {
				content: '""',
				position: "absolute",
				top: 0,
				left: 0,
				right: 0,
				bottom: 0,
				borderRadius: "inherit",
				background: "token(colors.glass.gradients.before)",
				pointerEvents: "none",
				zIndex: 1,
			},
		},
		variants: {
			size: {
				sm: { width: "36px", height: "20px" },
				md: { width: "44px", height: "24px" },
				lg: { width: "52px", height: "28px" },
			},
		},
		defaultVariants: { size: "md" },
	},

	// Slider - Range slider component
	slider: {
		className: "slider",
		jsx: ["Slider"],
		base: {
			position: "relative",
			overflow: "hidden",
			background: "token(colors.glass.bg)",
			backdropFilter: "blur(token(blurs.glass.md))",
			border: "1px solid token(colors.glass.border)",
			boxShadow: "token(shadows.glass.base)",
			borderRadius: "token(radii.full)",
			width: "100%",
			_before: {
				content: '""',
				position: "absolute",
				top: 0,
				left: 0,
				right: 0,
				bottom: 0,
				borderRadius: "inherit",
				background: "token(colors.glass.gradients.before)",
				pointerEvents: "none",
				zIndex: 1,
			},
		},
		variants: {
			size: {
				sm: { height: "4px" },
				md: { height: "6px" },
				lg: { height: "8px" },
			},
		},
		defaultVariants: { size: "md" },
	},

	// Progress - Progress bar component
	progress: {
		className: "progress",
		jsx: ["Progress"],
		base: {
			position: "relative",
			overflow: "hidden",
			background: "token(colors.glass.bg)",
			backdropFilter: "blur(token(blurs.glass.md))",
			border: "1px solid token(colors.glass.border)",
			boxShadow: "token(shadows.glass.base)",
			borderRadius: "token(radii.full)",
			width: "100%",
			_before: {
				content: '""',
				position: "absolute",
				top: 0,
				left: 0,
				right: 0,
				bottom: 0,
				borderRadius: "inherit",
				background: "token(colors.glass.gradients.before)",
				pointerEvents: "none",
				zIndex: 1,
			},
		},
		variants: {
			size: {
				sm: { height: "6px" },
				md: { height: "8px" },
				lg: { height: "12px" },
			},
		},
		defaultVariants: { size: "md" },
	},
};
